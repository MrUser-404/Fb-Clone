# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Sep  7 12:28:01 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))