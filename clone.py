# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Mon Jul 10 09:45:06 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))