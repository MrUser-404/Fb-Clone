# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Aug 22 09:20:43 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))