import base64

# Base64 encoded string
base64_encoded = b''[::-1]  # Insert your base64 encoded string here

# Add padding if necessary
base64_padded = base64_encoded + b'=' * (4 - len(base64_encoded) % 4)

# Decode the base64 encoded part
decoded_source = base64.b64decode(base64_padded)

# Print the decoded source code
print(decoded_source.decode('latin-1'))

